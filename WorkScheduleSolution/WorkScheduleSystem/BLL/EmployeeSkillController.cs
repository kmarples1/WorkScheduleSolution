using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using WorkSchedule.Data.Entities;
using WorkScheduleSystem.DAL;

namespace WorkScheduleSystem.BLL
{

    //Receive integer parameter representing a skill and return all employees with that skill.


    [DataObject]
    public class EmployeeSkillController
    {
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public List<EmployeeSkill> ListAllEmployeeSkills()
        {
            using (var context = new WorkScheduleContext())
            {

                var SkillList = from row in context.EmployeeSkills
                                select new
                                {
                                    FullName = row.FirstName + " " + row.LastName,
                                    HomePhone = row.HomePhone,
                                    CurrentStatus = row.Active,
                                    SkillLevel = row.Level,
                                    YOE = row.YearsOfExperience
                                };
                return context.EmployeeSkills.ToList();
            }
        }

        [DataObjectMethod(DataObjectMethodType.Insert, false)]
        public void AddEmployeeSkill(EmployeeSkill data)
        {
            using (var context = new WorkScheduleContext())
            {
                // The Region Primary Key is not auto-generated by the database
                data.EmployeeSkillID = context.EmployeeSkills.Max(x => x.EmployeeSkillID) + 1;
                context.EmployeeSkills.Add(data);
                context.SaveChanges();
            }
        }

        [DataObjectMethod(DataObjectMethodType.Update, false)]
        public void UpdateEmployeeSkill(EmployeeSkill data)
        {
            using (var context = new WorkScheduleContext())
            {
                var existing = context.Entry(data);
                existing.State = EntityState.Modified;
                context.SaveChanges();
            }
        }

        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public void DeleteEmployeeSkill(EmployeeSkill data)
        {
            using (var context = new WorkScheduleContext())
            {
                var existing = context.EmployeeSkills.Find(data.EmployeeSkillID);
                context.EmployeeSkills.Remove(existing);
                context.SaveChanges();
            }
        }

    }
}
